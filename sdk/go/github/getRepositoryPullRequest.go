// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a specific GitHub Pull Request in a repository.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-github/sdk/v4/go/github"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := github.LookupRepositoryPullRequest(ctx, &github.LookupRepositoryPullRequestArgs{
// 			BaseRepository: "example_repository",
// 			Number:         1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupRepositoryPullRequest(ctx *pulumi.Context, args *LookupRepositoryPullRequestArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryPullRequestResult, error) {
	var rv LookupRepositoryPullRequestResult
	err := ctx.Invoke("github:index/getRepositoryPullRequest:getRepositoryPullRequest", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryPullRequest.
type LookupRepositoryPullRequestArgs struct {
	// Name of the base repository to retrieve the Pull Request from.
	BaseRepository string `pulumi:"baseRepository"`
	// The number of the Pull Request within the repository.
	Number int `pulumi:"number"`
	// Owner of the repository. If not provided, the provider's default owner is used.
	Owner *string `pulumi:"owner"`
}

// A collection of values returned by getRepositoryPullRequest.
type LookupRepositoryPullRequestResult struct {
	// Name of the ref (branch) of the Pull Request base.
	BaseRef        string `pulumi:"baseRef"`
	BaseRepository string `pulumi:"baseRepository"`
	// Head commit SHA of the Pull Request base.
	BaseSha string `pulumi:"baseSha"`
	// Body of the Pull Request.
	Body string `pulumi:"body"`
	// Indicates Whether this Pull Request is a draft.
	Draft bool `pulumi:"draft"`
	// Owner of the Pull Request head repository.
	HeadOwner string `pulumi:"headOwner"`
	HeadRef   string `pulumi:"headRef"`
	// Name of the Pull Request head repository.
	HeadRepository string `pulumi:"headRepository"`
	// Head commit SHA of the Pull Request head.
	HeadSha string `pulumi:"headSha"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of label names set on the Pull Request.
	Labels []string `pulumi:"labels"`
	// Indicates whether the base repository maintainers can modify the Pull Request.
	MaintainerCanModify bool `pulumi:"maintainerCanModify"`
	Number              int  `pulumi:"number"`
	// Unix timestamp indicating the Pull Request creation time.
	OpenedAt int `pulumi:"openedAt"`
	// GitHub login of the user who opened the Pull Request.
	OpenedBy string  `pulumi:"openedBy"`
	Owner    *string `pulumi:"owner"`
	// the current Pull Request state - can be "open", "closed" or "merged".
	State string `pulumi:"state"`
	// The title of the Pull Request.
	Title string `pulumi:"title"`
	// The timestamp of the last Pull Request update.
	UpdatedAt int `pulumi:"updatedAt"`
}
