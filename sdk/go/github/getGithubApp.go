// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package github

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetGithubApp(ctx *pulumi.Context, args *GetGithubAppArgs, opts ...pulumi.InvokeOption) (*GetGithubAppResult, error) {
	var rv GetGithubAppResult
	err := ctx.Invoke("github:index/getGithubApp:getGithubApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGithubApp.
type GetGithubAppArgs struct {
	Slug string `pulumi:"slug"`
}

// A collection of values returned by getGithubApp.
type GetGithubAppResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Name   string `pulumi:"name"`
	NodeId string `pulumi:"nodeId"`
	Slug   string `pulumi:"slug"`
}

func GetGithubAppOutput(ctx *pulumi.Context, args GetGithubAppOutputArgs, opts ...pulumi.InvokeOption) GetGithubAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGithubAppResult, error) {
			args := v.(GetGithubAppArgs)
			r, err := GetGithubApp(ctx, &args, opts...)
			var s GetGithubAppResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGithubAppResultOutput)
}

// A collection of arguments for invoking getGithubApp.
type GetGithubAppOutputArgs struct {
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetGithubAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubAppArgs)(nil)).Elem()
}

// A collection of values returned by getGithubApp.
type GetGithubAppResultOutput struct{ *pulumi.OutputState }

func (GetGithubAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubAppResult)(nil)).Elem()
}

func (o GetGithubAppResultOutput) ToGetGithubAppResultOutput() GetGithubAppResultOutput {
	return o
}

func (o GetGithubAppResultOutput) ToGetGithubAppResultOutputWithContext(ctx context.Context) GetGithubAppResultOutput {
	return o
}

func (o GetGithubAppResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubAppResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGithubAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubAppResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGithubAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubAppResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGithubAppResultOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubAppResult) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o GetGithubAppResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubAppResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGithubAppResultOutput{})
}
