// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrganizationTeams(args?: GetOrganizationTeamsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationTeamsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("github:index/getOrganizationTeams:getOrganizationTeams", {
        "resultsPerPage": args.resultsPerPage,
        "rootTeamsOnly": args.rootTeamsOnly,
        "summaryOnly": args.summaryOnly,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizationTeams.
 */
export interface GetOrganizationTeamsArgs {
    resultsPerPage?: number;
    rootTeamsOnly?: boolean;
    summaryOnly?: boolean;
}

/**
 * A collection of values returned by getOrganizationTeams.
 */
export interface GetOrganizationTeamsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultsPerPage?: number;
    readonly rootTeamsOnly?: boolean;
    readonly summaryOnly?: boolean;
    readonly teams: outputs.GetOrganizationTeamsTeam[];
}

export function getOrganizationTeamsOutput(args?: GetOrganizationTeamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationTeamsResult> {
    return pulumi.output(args).apply(a => getOrganizationTeams(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationTeams.
 */
export interface GetOrganizationTeamsOutputArgs {
    resultsPerPage?: pulumi.Input<number>;
    rootTeamsOnly?: pulumi.Input<boolean>;
    summaryOnly?: pulumi.Input<boolean>;
}
