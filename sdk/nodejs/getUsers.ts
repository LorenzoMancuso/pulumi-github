// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about multiple GitHub users at once.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * // Retrieve information about multiple GitHub users.
 * const example = pulumi.output(github.getUsers({
 *     usernames: [
 *         "example1",
 *         "example2",
 *         "example3",
 *     ],
 * }));
 *
 * export const validUsers = github_user_example.logins;
 * export const invalidUsers = github_user_example.unknownLogins;
 * ```
 */
export function getUsers(args: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("github:index/getUsers:getUsers", {
        "usernames": args.usernames,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * List of usernames.
     */
    usernames: string[];
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * list of logins of users that could be found.
     */
    readonly logins: string[];
    /**
     * list of Node IDs of users that could be found.
     */
    readonly nodeIds: string[];
    /**
     * list of logins without matching user.
     */
    readonly unknownLogins: string[];
    readonly usernames: string[];
}
