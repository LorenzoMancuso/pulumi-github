// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTeam(args: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("github:index/getTeam:getTeam", {
        "membershipType": args.membershipType,
        "resultsPerPage": args.resultsPerPage,
        "slug": args.slug,
        "summaryOnly": args.summaryOnly,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    membershipType?: string;
    resultsPerPage?: number;
    slug: string;
    summaryOnly?: boolean;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly members: string[];
    readonly membershipType?: string;
    readonly name: string;
    readonly nodeId: string;
    readonly permission: string;
    readonly privacy: string;
    readonly repositories: string[];
    readonly resultsPerPage?: number;
    readonly slug: string;
    readonly summaryOnly?: boolean;
}

export function getTeamOutput(args: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply(a => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    membershipType?: pulumi.Input<string>;
    resultsPerPage?: pulumi.Input<number>;
    slug: pulumi.Input<string>;
    summaryOnly?: pulumi.Input<boolean>;
}
