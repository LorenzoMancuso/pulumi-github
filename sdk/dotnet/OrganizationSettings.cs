// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    [GithubResourceType("github:index/organizationSettings:OrganizationSettings")]
    public partial class OrganizationSettings : global::Pulumi.CustomResource
    {
        [Output("advancedSecurityEnabledForNewRepositories")]
        public Output<bool?> AdvancedSecurityEnabledForNewRepositories { get; private set; } = null!;

        [Output("billingEmail")]
        public Output<string> BillingEmail { get; private set; } = null!;

        [Output("blog")]
        public Output<string?> Blog { get; private set; } = null!;

        [Output("company")]
        public Output<string?> Company { get; private set; } = null!;

        [Output("defaultRepositoryPermission")]
        public Output<string?> DefaultRepositoryPermission { get; private set; } = null!;

        [Output("dependabotAlertsEnabledForNewRepositories")]
        public Output<bool?> DependabotAlertsEnabledForNewRepositories { get; private set; } = null!;

        [Output("dependabotSecurityUpdatesEnabledForNewRepositories")]
        public Output<bool?> DependabotSecurityUpdatesEnabledForNewRepositories { get; private set; } = null!;

        [Output("dependencyGraphEnabledForNewRepositories")]
        public Output<bool?> DependencyGraphEnabledForNewRepositories { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("email")]
        public Output<string?> Email { get; private set; } = null!;

        [Output("hasOrganizationProjects")]
        public Output<bool?> HasOrganizationProjects { get; private set; } = null!;

        [Output("hasRepositoryProjects")]
        public Output<bool?> HasRepositoryProjects { get; private set; } = null!;

        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Setting to true allows organization members to create internal repositories. Only available to Enterprise Organizations.
        /// </summary>
        [Output("membersCanCreateInternalRepositories")]
        public Output<bool?> MembersCanCreateInternalRepositories { get; private set; } = null!;

        [Output("membersCanCreatePages")]
        public Output<bool?> MembersCanCreatePages { get; private set; } = null!;

        [Output("membersCanCreatePrivatePages")]
        public Output<bool?> MembersCanCreatePrivatePages { get; private set; } = null!;

        [Output("membersCanCreatePrivateRepositories")]
        public Output<bool?> MembersCanCreatePrivateRepositories { get; private set; } = null!;

        [Output("membersCanCreatePublicPages")]
        public Output<bool?> MembersCanCreatePublicPages { get; private set; } = null!;

        [Output("membersCanCreatePublicRepositories")]
        public Output<bool?> MembersCanCreatePublicRepositories { get; private set; } = null!;

        [Output("membersCanCreateRepositories")]
        public Output<bool?> MembersCanCreateRepositories { get; private set; } = null!;

        [Output("membersCanForkPrivateRepositories")]
        public Output<bool?> MembersCanForkPrivateRepositories { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("secretScanningEnabledForNewRepositories")]
        public Output<bool?> SecretScanningEnabledForNewRepositories { get; private set; } = null!;

        [Output("secretScanningPushProtectionEnabledForNewRepositories")]
        public Output<bool?> SecretScanningPushProtectionEnabledForNewRepositories { get; private set; } = null!;

        [Output("twitterUsername")]
        public Output<string?> TwitterUsername { get; private set; } = null!;

        [Output("webCommitSignoffRequired")]
        public Output<bool?> WebCommitSignoffRequired { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationSettings(string name, OrganizationSettingsArgs args, CustomResourceOptions? options = null)
            : base("github:index/organizationSettings:OrganizationSettings", name, args ?? new OrganizationSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationSettings(string name, Input<string> id, OrganizationSettingsState? state = null, CustomResourceOptions? options = null)
            : base("github:index/organizationSettings:OrganizationSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationSettings Get(string name, Input<string> id, OrganizationSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationSettings(name, id, state, options);
        }
    }

    public sealed class OrganizationSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("advancedSecurityEnabledForNewRepositories")]
        public Input<bool>? AdvancedSecurityEnabledForNewRepositories { get; set; }

        [Input("billingEmail", required: true)]
        public Input<string> BillingEmail { get; set; } = null!;

        [Input("blog")]
        public Input<string>? Blog { get; set; }

        [Input("company")]
        public Input<string>? Company { get; set; }

        [Input("defaultRepositoryPermission")]
        public Input<string>? DefaultRepositoryPermission { get; set; }

        [Input("dependabotAlertsEnabledForNewRepositories")]
        public Input<bool>? DependabotAlertsEnabledForNewRepositories { get; set; }

        [Input("dependabotSecurityUpdatesEnabledForNewRepositories")]
        public Input<bool>? DependabotSecurityUpdatesEnabledForNewRepositories { get; set; }

        [Input("dependencyGraphEnabledForNewRepositories")]
        public Input<bool>? DependencyGraphEnabledForNewRepositories { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("hasOrganizationProjects")]
        public Input<bool>? HasOrganizationProjects { get; set; }

        [Input("hasRepositoryProjects")]
        public Input<bool>? HasRepositoryProjects { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Setting to true allows organization members to create internal repositories. Only available to Enterprise Organizations.
        /// </summary>
        [Input("membersCanCreateInternalRepositories")]
        public Input<bool>? MembersCanCreateInternalRepositories { get; set; }

        [Input("membersCanCreatePages")]
        public Input<bool>? MembersCanCreatePages { get; set; }

        [Input("membersCanCreatePrivatePages")]
        public Input<bool>? MembersCanCreatePrivatePages { get; set; }

        [Input("membersCanCreatePrivateRepositories")]
        public Input<bool>? MembersCanCreatePrivateRepositories { get; set; }

        [Input("membersCanCreatePublicPages")]
        public Input<bool>? MembersCanCreatePublicPages { get; set; }

        [Input("membersCanCreatePublicRepositories")]
        public Input<bool>? MembersCanCreatePublicRepositories { get; set; }

        [Input("membersCanCreateRepositories")]
        public Input<bool>? MembersCanCreateRepositories { get; set; }

        [Input("membersCanForkPrivateRepositories")]
        public Input<bool>? MembersCanForkPrivateRepositories { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secretScanningEnabledForNewRepositories")]
        public Input<bool>? SecretScanningEnabledForNewRepositories { get; set; }

        [Input("secretScanningPushProtectionEnabledForNewRepositories")]
        public Input<bool>? SecretScanningPushProtectionEnabledForNewRepositories { get; set; }

        [Input("twitterUsername")]
        public Input<string>? TwitterUsername { get; set; }

        [Input("webCommitSignoffRequired")]
        public Input<bool>? WebCommitSignoffRequired { get; set; }

        public OrganizationSettingsArgs()
        {
        }
        public static new OrganizationSettingsArgs Empty => new OrganizationSettingsArgs();
    }

    public sealed class OrganizationSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("advancedSecurityEnabledForNewRepositories")]
        public Input<bool>? AdvancedSecurityEnabledForNewRepositories { get; set; }

        [Input("billingEmail")]
        public Input<string>? BillingEmail { get; set; }

        [Input("blog")]
        public Input<string>? Blog { get; set; }

        [Input("company")]
        public Input<string>? Company { get; set; }

        [Input("defaultRepositoryPermission")]
        public Input<string>? DefaultRepositoryPermission { get; set; }

        [Input("dependabotAlertsEnabledForNewRepositories")]
        public Input<bool>? DependabotAlertsEnabledForNewRepositories { get; set; }

        [Input("dependabotSecurityUpdatesEnabledForNewRepositories")]
        public Input<bool>? DependabotSecurityUpdatesEnabledForNewRepositories { get; set; }

        [Input("dependencyGraphEnabledForNewRepositories")]
        public Input<bool>? DependencyGraphEnabledForNewRepositories { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("hasOrganizationProjects")]
        public Input<bool>? HasOrganizationProjects { get; set; }

        [Input("hasRepositoryProjects")]
        public Input<bool>? HasRepositoryProjects { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Setting to true allows organization members to create internal repositories. Only available to Enterprise Organizations.
        /// </summary>
        [Input("membersCanCreateInternalRepositories")]
        public Input<bool>? MembersCanCreateInternalRepositories { get; set; }

        [Input("membersCanCreatePages")]
        public Input<bool>? MembersCanCreatePages { get; set; }

        [Input("membersCanCreatePrivatePages")]
        public Input<bool>? MembersCanCreatePrivatePages { get; set; }

        [Input("membersCanCreatePrivateRepositories")]
        public Input<bool>? MembersCanCreatePrivateRepositories { get; set; }

        [Input("membersCanCreatePublicPages")]
        public Input<bool>? MembersCanCreatePublicPages { get; set; }

        [Input("membersCanCreatePublicRepositories")]
        public Input<bool>? MembersCanCreatePublicRepositories { get; set; }

        [Input("membersCanCreateRepositories")]
        public Input<bool>? MembersCanCreateRepositories { get; set; }

        [Input("membersCanForkPrivateRepositories")]
        public Input<bool>? MembersCanForkPrivateRepositories { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("secretScanningEnabledForNewRepositories")]
        public Input<bool>? SecretScanningEnabledForNewRepositories { get; set; }

        [Input("secretScanningPushProtectionEnabledForNewRepositories")]
        public Input<bool>? SecretScanningPushProtectionEnabledForNewRepositories { get; set; }

        [Input("twitterUsername")]
        public Input<string>? TwitterUsername { get; set; }

        [Input("webCommitSignoffRequired")]
        public Input<bool>? WebCommitSignoffRequired { get; set; }

        public OrganizationSettingsState()
        {
        }
        public static new OrganizationSettingsState Empty => new OrganizationSettingsState();
    }
}
