// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Github
{
    public static class GetRepositoryDeployKeys
    {
        public static Task<GetRepositoryDeployKeysResult> InvokeAsync(GetRepositoryDeployKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryDeployKeysResult>("github:index/getRepositoryDeployKeys:getRepositoryDeployKeys", args ?? new GetRepositoryDeployKeysArgs(), options.WithDefaults());

        public static Output<GetRepositoryDeployKeysResult> Invoke(GetRepositoryDeployKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryDeployKeysResult>("github:index/getRepositoryDeployKeys:getRepositoryDeployKeys", args ?? new GetRepositoryDeployKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryDeployKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("repository", required: true)]
        public string Repository { get; set; } = null!;

        public GetRepositoryDeployKeysArgs()
        {
        }
        public static new GetRepositoryDeployKeysArgs Empty => new GetRepositoryDeployKeysArgs();
    }

    public sealed class GetRepositoryDeployKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        public GetRepositoryDeployKeysInvokeArgs()
        {
        }
        public static new GetRepositoryDeployKeysInvokeArgs Empty => new GetRepositoryDeployKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryDeployKeysResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetRepositoryDeployKeysKeyResult> Keys;
        public readonly string Repository;

        [OutputConstructor]
        private GetRepositoryDeployKeysResult(
            string id,

            ImmutableArray<Outputs.GetRepositoryDeployKeysKeyResult> keys,

            string repository)
        {
            Id = id;
            Keys = keys;
            Repository = repository;
        }
    }
}
