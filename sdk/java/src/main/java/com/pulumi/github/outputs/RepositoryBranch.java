// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryBranch {
    /**
     * @return The name of the repository.
     * 
     */
    private final @Nullable String name;
    /**
     * @return Whether the branch is protected.
     * 
     */
    private final @Nullable Boolean protected_;

    @CustomType.Constructor
    private RepositoryBranch(
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("protected") @Nullable Boolean protected_) {
        this.name = name;
        this.protected_ = protected_;
    }

    /**
     * @return The name of the repository.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Whether the branch is protected.
     * 
     */
    public Optional<Boolean> protected_() {
        return Optional.ofNullable(this.protected_);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryBranch defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String name;
        private @Nullable Boolean protected_;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryBranch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.protected_ = defaults.protected_;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder protected_(@Nullable Boolean protected_) {
            this.protected_ = protected_;
            return this;
        }        public RepositoryBranch build() {
            return new RepositoryBranch(name, protected_);
        }
    }
}
