// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTreeEntry {
    private final String mode;
    private final String path;
    private final String sha;
    private final Integer size;
    private final String type;

    @CustomType.Constructor
    private GetTreeEntry(
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("path") String path,
        @CustomType.Parameter("sha") String sha,
        @CustomType.Parameter("size") Integer size,
        @CustomType.Parameter("type") String type) {
        this.mode = mode;
        this.path = path;
        this.sha = sha;
        this.size = size;
        this.type = type;
    }

    public String mode() {
        return this.mode;
    }
    public String path() {
        return this.path;
    }
    public String sha() {
        return this.sha;
    }
    public Integer size() {
        return this.size;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTreeEntry defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String mode;
        private String path;
        private String sha;
        private Integer size;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTreeEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.path = defaults.path;
    	      this.sha = defaults.sha;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
        }

        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder sha(String sha) {
            this.sha = Objects.requireNonNull(sha);
            return this;
        }
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetTreeEntry build() {
            return new GetTreeEntry(mode, path, sha, size, type);
        }
    }
}
