// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.GetOrganizationTeamsTeam;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationTeamsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Only return teams that are at the organization&#39;s root, i.e. no nested teams. Defaults to `false`.
     * 
     */
    private final @Nullable Boolean rootTeamsOnly;
    /**
     * @return An Array of GitHub Teams.  Each `team` block consists of the fields documented below.
     * ***
     * 
     */
    private final List<GetOrganizationTeamsTeam> teams;

    @CustomType.Constructor
    private GetOrganizationTeamsResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("rootTeamsOnly") @Nullable Boolean rootTeamsOnly,
        @CustomType.Parameter("teams") List<GetOrganizationTeamsTeam> teams) {
        this.id = id;
        this.rootTeamsOnly = rootTeamsOnly;
        this.teams = teams;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Only return teams that are at the organization&#39;s root, i.e. no nested teams. Defaults to `false`.
     * 
     */
    public Optional<Boolean> rootTeamsOnly() {
        return Optional.ofNullable(this.rootTeamsOnly);
    }
    /**
     * @return An Array of GitHub Teams.  Each `team` block consists of the fields documented below.
     * ***
     * 
     */
    public List<GetOrganizationTeamsTeam> teams() {
        return this.teams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationTeamsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private @Nullable Boolean rootTeamsOnly;
        private List<GetOrganizationTeamsTeam> teams;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOrganizationTeamsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.rootTeamsOnly = defaults.rootTeamsOnly;
    	      this.teams = defaults.teams;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder rootTeamsOnly(@Nullable Boolean rootTeamsOnly) {
            this.rootTeamsOnly = rootTeamsOnly;
            return this;
        }
        public Builder teams(List<GetOrganizationTeamsTeam> teams) {
            this.teams = Objects.requireNonNull(teams);
            return this;
        }
        public Builder teams(GetOrganizationTeamsTeam... teams) {
            return teams(List.of(teams));
        }        public GetOrganizationTeamsResult build() {
            return new GetOrganizationTeamsResult(id, rootTeamsOnly, teams);
        }
    }
}
