// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.github.outputs.GetOrganizationTeamsTeam;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationTeamsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Integer resultsPerPage;
    private @Nullable Boolean rootTeamsOnly;
    private @Nullable Boolean summaryOnly;
    private List<GetOrganizationTeamsTeam> teams;

    private GetOrganizationTeamsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> resultsPerPage() {
        return Optional.ofNullable(this.resultsPerPage);
    }
    public Optional<Boolean> rootTeamsOnly() {
        return Optional.ofNullable(this.rootTeamsOnly);
    }
    public Optional<Boolean> summaryOnly() {
        return Optional.ofNullable(this.summaryOnly);
    }
    public List<GetOrganizationTeamsTeam> teams() {
        return this.teams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationTeamsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Integer resultsPerPage;
        private @Nullable Boolean rootTeamsOnly;
        private @Nullable Boolean summaryOnly;
        private List<GetOrganizationTeamsTeam> teams;
        public Builder() {}
        public Builder(GetOrganizationTeamsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.resultsPerPage = defaults.resultsPerPage;
    	      this.rootTeamsOnly = defaults.rootTeamsOnly;
    	      this.summaryOnly = defaults.summaryOnly;
    	      this.teams = defaults.teams;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder resultsPerPage(@Nullable Integer resultsPerPage) {
            this.resultsPerPage = resultsPerPage;
            return this;
        }
        @CustomType.Setter
        public Builder rootTeamsOnly(@Nullable Boolean rootTeamsOnly) {
            this.rootTeamsOnly = rootTeamsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder summaryOnly(@Nullable Boolean summaryOnly) {
            this.summaryOnly = summaryOnly;
            return this;
        }
        @CustomType.Setter
        public Builder teams(List<GetOrganizationTeamsTeam> teams) {
            this.teams = Objects.requireNonNull(teams);
            return this;
        }
        public Builder teams(GetOrganizationTeamsTeam... teams) {
            return teams(List.of(teams));
        }
        public GetOrganizationTeamsResult build() {
            final var o = new GetOrganizationTeamsResult();
            o.id = id;
            o.resultsPerPage = resultsPerPage;
            o.rootTeamsOnly = rootTeamsOnly;
            o.summaryOnly = summaryOnly;
            o.teams = teams;
            return o;
        }
    }
}
