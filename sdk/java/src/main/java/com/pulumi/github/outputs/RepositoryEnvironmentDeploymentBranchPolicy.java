// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class RepositoryEnvironmentDeploymentBranchPolicy {
    /**
     * @return Whether only branches that match the specified name patterns can deploy to this environment.
     * 
     */
    private final Boolean customBranchPolicies;
    /**
     * @return Whether only branches with branch protection rules can deploy to this environment.
     * 
     */
    private final Boolean protectedBranches;

    @CustomType.Constructor
    private RepositoryEnvironmentDeploymentBranchPolicy(
        @CustomType.Parameter("customBranchPolicies") Boolean customBranchPolicies,
        @CustomType.Parameter("protectedBranches") Boolean protectedBranches) {
        this.customBranchPolicies = customBranchPolicies;
        this.protectedBranches = protectedBranches;
    }

    /**
     * @return Whether only branches that match the specified name patterns can deploy to this environment.
     * 
     */
    public Boolean customBranchPolicies() {
        return this.customBranchPolicies;
    }
    /**
     * @return Whether only branches with branch protection rules can deploy to this environment.
     * 
     */
    public Boolean protectedBranches() {
        return this.protectedBranches;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryEnvironmentDeploymentBranchPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean customBranchPolicies;
        private Boolean protectedBranches;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryEnvironmentDeploymentBranchPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customBranchPolicies = defaults.customBranchPolicies;
    	      this.protectedBranches = defaults.protectedBranches;
        }

        public Builder customBranchPolicies(Boolean customBranchPolicies) {
            this.customBranchPolicies = Objects.requireNonNull(customBranchPolicies);
            return this;
        }
        public Builder protectedBranches(Boolean protectedBranches) {
            this.protectedBranches = Objects.requireNonNull(protectedBranches);
            return this;
        }        public RepositoryEnvironmentDeploymentBranchPolicy build() {
            return new RepositoryEnvironmentDeploymentBranchPolicy(customBranchPolicies, protectedBranches);
        }
    }
}
