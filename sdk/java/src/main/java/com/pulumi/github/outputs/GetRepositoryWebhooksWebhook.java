// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryWebhooksWebhook {
    private Boolean active;
    private Integer id;
    private String name;
    private String type;
    private String url;

    private GetRepositoryWebhooksWebhook() {}
    public Boolean active() {
        return this.active;
    }
    public Integer id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String type() {
        return this.type;
    }
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryWebhooksWebhook defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean active;
        private Integer id;
        private String name;
        private String type;
        private String url;
        public Builder() {}
        public Builder(GetRepositoryWebhooksWebhook defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public GetRepositoryWebhooksWebhook build() {
            final var o = new GetRepositoryWebhooksWebhook();
            o.active = active;
            o.id = id;
            o.name = name;
            o.type = type;
            o.url = url;
            return o;
        }
    }
}
