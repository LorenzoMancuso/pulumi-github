// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryBranch {
    /**
     * @return The name of the repository.
     * 
     */
    private final String name;
    /**
     * @return Whether the branch is protected.
     * 
     */
    private final Boolean protected_;

    @CustomType.Constructor
    private GetRepositoryBranch(
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("protected") Boolean protected_) {
        this.name = name;
        this.protected_ = protected_;
    }

    /**
     * @return The name of the repository.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Whether the branch is protected.
     * 
     */
    public Boolean protected_() {
        return this.protected_;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryBranch defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private Boolean protected_;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRepositoryBranch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.protected_ = defaults.protected_;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder protected_(Boolean protected_) {
            this.protected_ = Objects.requireNonNull(protected_);
            return this;
        }        public GetRepositoryBranch build() {
            return new GetRepositoryBranch(name, protected_);
        }
    }
}
