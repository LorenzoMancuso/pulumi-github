// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.github.inputs.ActionsRepositoryPermissionsAllowedActionsConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionsRepositoryPermissionsState extends com.pulumi.resources.ResourceArgs {

    public static final ActionsRepositoryPermissionsState Empty = new ActionsRepositoryPermissionsState();

    @Import(name="allowedActions")
    private @Nullable Output<String> allowedActions;

    public Optional<Output<String>> allowedActions() {
        return Optional.ofNullable(this.allowedActions);
    }

    @Import(name="allowedActionsConfig")
    private @Nullable Output<ActionsRepositoryPermissionsAllowedActionsConfigArgs> allowedActionsConfig;

    public Optional<Output<ActionsRepositoryPermissionsAllowedActionsConfigArgs>> allowedActionsConfig() {
        return Optional.ofNullable(this.allowedActionsConfig);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="repository")
    private @Nullable Output<String> repository;

    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    private ActionsRepositoryPermissionsState() {}

    private ActionsRepositoryPermissionsState(ActionsRepositoryPermissionsState $) {
        this.allowedActions = $.allowedActions;
        this.allowedActionsConfig = $.allowedActionsConfig;
        this.enabled = $.enabled;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionsRepositoryPermissionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionsRepositoryPermissionsState $;

        public Builder() {
            $ = new ActionsRepositoryPermissionsState();
        }

        public Builder(ActionsRepositoryPermissionsState defaults) {
            $ = new ActionsRepositoryPermissionsState(Objects.requireNonNull(defaults));
        }

        public Builder allowedActions(@Nullable Output<String> allowedActions) {
            $.allowedActions = allowedActions;
            return this;
        }

        public Builder allowedActions(String allowedActions) {
            return allowedActions(Output.of(allowedActions));
        }

        public Builder allowedActionsConfig(@Nullable Output<ActionsRepositoryPermissionsAllowedActionsConfigArgs> allowedActionsConfig) {
            $.allowedActionsConfig = allowedActionsConfig;
            return this;
        }

        public Builder allowedActionsConfig(ActionsRepositoryPermissionsAllowedActionsConfigArgs allowedActionsConfig) {
            return allowedActionsConfig(Output.of(allowedActionsConfig));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public ActionsRepositoryPermissionsState build() {
            return $;
        }
    }

}
