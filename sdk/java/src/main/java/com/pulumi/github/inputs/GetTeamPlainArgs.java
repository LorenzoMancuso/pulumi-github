// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamPlainArgs Empty = new GetTeamPlainArgs();

    @Import(name="membershipType")
    private @Nullable String membershipType;

    public Optional<String> membershipType() {
        return Optional.ofNullable(this.membershipType);
    }

    @Import(name="resultsPerPage")
    private @Nullable Integer resultsPerPage;

    public Optional<Integer> resultsPerPage() {
        return Optional.ofNullable(this.resultsPerPage);
    }

    @Import(name="slug", required=true)
    private String slug;

    public String slug() {
        return this.slug;
    }

    @Import(name="summaryOnly")
    private @Nullable Boolean summaryOnly;

    public Optional<Boolean> summaryOnly() {
        return Optional.ofNullable(this.summaryOnly);
    }

    private GetTeamPlainArgs() {}

    private GetTeamPlainArgs(GetTeamPlainArgs $) {
        this.membershipType = $.membershipType;
        this.resultsPerPage = $.resultsPerPage;
        this.slug = $.slug;
        this.summaryOnly = $.summaryOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamPlainArgs $;

        public Builder() {
            $ = new GetTeamPlainArgs();
        }

        public Builder(GetTeamPlainArgs defaults) {
            $ = new GetTeamPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder membershipType(@Nullable String membershipType) {
            $.membershipType = membershipType;
            return this;
        }

        public Builder resultsPerPage(@Nullable Integer resultsPerPage) {
            $.resultsPerPage = resultsPerPage;
            return this;
        }

        public Builder slug(String slug) {
            $.slug = slug;
            return this;
        }

        public Builder summaryOnly(@Nullable Boolean summaryOnly) {
            $.summaryOnly = summaryOnly;
            return this;
        }

        public GetTeamPlainArgs build() {
            $.slug = Objects.requireNonNull($.slug, "expected parameter 'slug' to be non-null");
            return $;
        }
    }

}
