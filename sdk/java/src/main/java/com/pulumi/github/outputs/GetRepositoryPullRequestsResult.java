// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.github.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryPullRequestsResult {
    /**
     * @return If set, filters Pull Requests by base branch name.
     * 
     */
    private final String baseRef;
    /**
     * @return Head commit SHA of the Pull Request base.
     * 
     */
    private final String baseSha;
    /**
     * @return Body of the Pull Request.
     * 
     */
    private final String body;
    /**
     * @return Indicates Whether this Pull Request is a draft.
     * 
     */
    private final Boolean draft;
    /**
     * @return Owner of the Pull Request head repository.
     * 
     */
    private final String headOwner;
    /**
     * @return If set, filters Pull Requests by head user or head organization and branch name in the format of &#34;user:ref-name&#34; or &#34;organization:ref-name&#34;. For example: &#34;github:new-script-format&#34; or &#34;octocat:test-branch&#34;.
     * 
     */
    private final String headRef;
    /**
     * @return Name of the Pull Request head repository.
     * 
     */
    private final String headRepository;
    /**
     * @return Head commit SHA of the Pull Request head.
     * 
     */
    private final String headSha;
    /**
     * @return List of label names set on the Pull Request.
     * 
     */
    private final List<String> labels;
    /**
     * @return Indicates whether the base repository maintainers can modify the Pull Request.
     * 
     */
    private final Boolean maintainerCanModify;
    /**
     * @return The number of the Pull Request within the repository.
     * 
     */
    private final Integer number;
    /**
     * @return Unix timestamp indicating the Pull Request creation time.
     * 
     */
    private final Integer openedAt;
    /**
     * @return GitHub login of the user who opened the Pull Request.
     * 
     */
    private final String openedBy;
    /**
     * @return If set, filters Pull Requests by state. Can be &#34;open&#34;, &#34;closed&#34;, or &#34;all&#34;. Default: &#34;open&#34;.
     * 
     */
    private final String state;
    /**
     * @return The title of the Pull Request.
     * 
     */
    private final String title;
    /**
     * @return The timestamp of the last Pull Request update.
     * 
     */
    private final Integer updatedAt;

    @CustomType.Constructor
    private GetRepositoryPullRequestsResult(
        @CustomType.Parameter("baseRef") String baseRef,
        @CustomType.Parameter("baseSha") String baseSha,
        @CustomType.Parameter("body") String body,
        @CustomType.Parameter("draft") Boolean draft,
        @CustomType.Parameter("headOwner") String headOwner,
        @CustomType.Parameter("headRef") String headRef,
        @CustomType.Parameter("headRepository") String headRepository,
        @CustomType.Parameter("headSha") String headSha,
        @CustomType.Parameter("labels") List<String> labels,
        @CustomType.Parameter("maintainerCanModify") Boolean maintainerCanModify,
        @CustomType.Parameter("number") Integer number,
        @CustomType.Parameter("openedAt") Integer openedAt,
        @CustomType.Parameter("openedBy") String openedBy,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("title") String title,
        @CustomType.Parameter("updatedAt") Integer updatedAt) {
        this.baseRef = baseRef;
        this.baseSha = baseSha;
        this.body = body;
        this.draft = draft;
        this.headOwner = headOwner;
        this.headRef = headRef;
        this.headRepository = headRepository;
        this.headSha = headSha;
        this.labels = labels;
        this.maintainerCanModify = maintainerCanModify;
        this.number = number;
        this.openedAt = openedAt;
        this.openedBy = openedBy;
        this.state = state;
        this.title = title;
        this.updatedAt = updatedAt;
    }

    /**
     * @return If set, filters Pull Requests by base branch name.
     * 
     */
    public String baseRef() {
        return this.baseRef;
    }
    /**
     * @return Head commit SHA of the Pull Request base.
     * 
     */
    public String baseSha() {
        return this.baseSha;
    }
    /**
     * @return Body of the Pull Request.
     * 
     */
    public String body() {
        return this.body;
    }
    /**
     * @return Indicates Whether this Pull Request is a draft.
     * 
     */
    public Boolean draft() {
        return this.draft;
    }
    /**
     * @return Owner of the Pull Request head repository.
     * 
     */
    public String headOwner() {
        return this.headOwner;
    }
    /**
     * @return If set, filters Pull Requests by head user or head organization and branch name in the format of &#34;user:ref-name&#34; or &#34;organization:ref-name&#34;. For example: &#34;github:new-script-format&#34; or &#34;octocat:test-branch&#34;.
     * 
     */
    public String headRef() {
        return this.headRef;
    }
    /**
     * @return Name of the Pull Request head repository.
     * 
     */
    public String headRepository() {
        return this.headRepository;
    }
    /**
     * @return Head commit SHA of the Pull Request head.
     * 
     */
    public String headSha() {
        return this.headSha;
    }
    /**
     * @return List of label names set on the Pull Request.
     * 
     */
    public List<String> labels() {
        return this.labels;
    }
    /**
     * @return Indicates whether the base repository maintainers can modify the Pull Request.
     * 
     */
    public Boolean maintainerCanModify() {
        return this.maintainerCanModify;
    }
    /**
     * @return The number of the Pull Request within the repository.
     * 
     */
    public Integer number() {
        return this.number;
    }
    /**
     * @return Unix timestamp indicating the Pull Request creation time.
     * 
     */
    public Integer openedAt() {
        return this.openedAt;
    }
    /**
     * @return GitHub login of the user who opened the Pull Request.
     * 
     */
    public String openedBy() {
        return this.openedBy;
    }
    /**
     * @return If set, filters Pull Requests by state. Can be &#34;open&#34;, &#34;closed&#34;, or &#34;all&#34;. Default: &#34;open&#34;.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The title of the Pull Request.
     * 
     */
    public String title() {
        return this.title;
    }
    /**
     * @return The timestamp of the last Pull Request update.
     * 
     */
    public Integer updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryPullRequestsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String baseRef;
        private String baseSha;
        private String body;
        private Boolean draft;
        private String headOwner;
        private String headRef;
        private String headRepository;
        private String headSha;
        private List<String> labels;
        private Boolean maintainerCanModify;
        private Integer number;
        private Integer openedAt;
        private String openedBy;
        private String state;
        private String title;
        private Integer updatedAt;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRepositoryPullRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseRef = defaults.baseRef;
    	      this.baseSha = defaults.baseSha;
    	      this.body = defaults.body;
    	      this.draft = defaults.draft;
    	      this.headOwner = defaults.headOwner;
    	      this.headRef = defaults.headRef;
    	      this.headRepository = defaults.headRepository;
    	      this.headSha = defaults.headSha;
    	      this.labels = defaults.labels;
    	      this.maintainerCanModify = defaults.maintainerCanModify;
    	      this.number = defaults.number;
    	      this.openedAt = defaults.openedAt;
    	      this.openedBy = defaults.openedBy;
    	      this.state = defaults.state;
    	      this.title = defaults.title;
    	      this.updatedAt = defaults.updatedAt;
        }

        public Builder baseRef(String baseRef) {
            this.baseRef = Objects.requireNonNull(baseRef);
            return this;
        }
        public Builder baseSha(String baseSha) {
            this.baseSha = Objects.requireNonNull(baseSha);
            return this;
        }
        public Builder body(String body) {
            this.body = Objects.requireNonNull(body);
            return this;
        }
        public Builder draft(Boolean draft) {
            this.draft = Objects.requireNonNull(draft);
            return this;
        }
        public Builder headOwner(String headOwner) {
            this.headOwner = Objects.requireNonNull(headOwner);
            return this;
        }
        public Builder headRef(String headRef) {
            this.headRef = Objects.requireNonNull(headRef);
            return this;
        }
        public Builder headRepository(String headRepository) {
            this.headRepository = Objects.requireNonNull(headRepository);
            return this;
        }
        public Builder headSha(String headSha) {
            this.headSha = Objects.requireNonNull(headSha);
            return this;
        }
        public Builder labels(List<String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        public Builder maintainerCanModify(Boolean maintainerCanModify) {
            this.maintainerCanModify = Objects.requireNonNull(maintainerCanModify);
            return this;
        }
        public Builder number(Integer number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }
        public Builder openedAt(Integer openedAt) {
            this.openedAt = Objects.requireNonNull(openedAt);
            return this;
        }
        public Builder openedBy(String openedBy) {
            this.openedBy = Objects.requireNonNull(openedBy);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        public Builder updatedAt(Integer updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }        public GetRepositoryPullRequestsResult build() {
            return new GetRepositoryPullRequestsResult(baseRef, baseSha, body, draft, headOwner, headRef, headRepository, headSha, labels, maintainerCanModify, number, openedAt, openedBy, state, title, updatedAt);
        }
    }
}
